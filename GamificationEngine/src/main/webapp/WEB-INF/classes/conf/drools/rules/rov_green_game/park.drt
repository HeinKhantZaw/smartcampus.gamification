template header
ruleId
actionId
rewardPoints

package pointTemplates;

import eu.trentorise.game.event.model.StartEvent;
import eu.trentorise.game.model.player.Player;
import eu.trentorise.game.rule.model.Action;

template "pointTemplate"

rule "PointRule_@{ruleId}"
    when
	action : ExternalAction(id == @{actionId},
			        ((Integer) params.get("ciao")) > 0);
    then
        action.id = @{rewardPoints};
end
end template


/*Numero di Km percorsi a piedi/bici/mezzi pubblici permettono di guadagnare punti.
1 Km a piedi/bici = 2 punti
1 Km bus/treno = 1 punto

la action Ã¨ del tipo "saveItinerary" con parametro 

if (there is an action saveItinerary and a player)
if (the action has bikeKm > 0)
then give player.totalPoints += action.bikeKm * 2

if (there is an action saveItinerary and a player)
if (the action has busKm > 0)
then give player.totalPoints += action.busKm * 1

then evoluto: player.states.getValueByKey(@{gameId})setPoints(player.getPoints() + @{rewardPoints});

rule "PointRule_@{ruleId}"
    when
        action: ExternalAction(action.id == @{actionId},
                               km : action.params.getValueByKey(@{paramName}),
                               km > 0,
                               player : action.getPlayer);
    then
        player.setPoints(player.getPoints() + km * @{operand});
end
end template*/



template header
ruleId
actionId
rewardPoints

package pointTemplates;

import eu.trentorise.game.ruleengine.model.experimental.ExternalAction;
import eu.trentorise.game.ruleengine.model.experimental.Player;

template "pointTemplate"

rule "PointRule_@{ruleId}"
    when
	action : ExternalAction(id == @{actionId},
			        ((Integer) params.get("ciao")) > 0);
    then
        action.setId(@{rewardPoints});
end
end template