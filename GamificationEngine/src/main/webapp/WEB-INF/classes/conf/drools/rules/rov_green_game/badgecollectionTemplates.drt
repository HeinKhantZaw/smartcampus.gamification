template header
ruleId
customizedPluginId
expectedPoints
badgeId

package badgeCollectionPluginTemplate;

import eu.trentorise.game.ruleengine.model.experimental.*;

template "badgeCollectionPluginTemplate"

rule "ParamPointTotalBadgesRule_@{ruleId}"
    when
        game : Game(id != null,
                    myid : id);
        action : ExternalAction(player != null,
                                myplayer : player,
                                eval(((PointPluginState) player.getGameStates().get(game.getId()).getPluginStates().get(PointPlugin.class).get(1)).getTotalPoints() > 20));
        
        //playerGamePluginStates : $player.getGameStates();//.get($game.getId()).getPluginStates();
        /*$ppState : (PointPluginState) playerGamePluginStates.get(PointPlugin.class).get(@{customizedPluginId});
        ppState.getTotalPoints() >= @{expectedPoints};
        badge : new Badge();
        badge.setId(@{badgeId});
        bcpState : (BadgeCollectionPluginState) playerGamePluginStates.get(BadgeCollectionPlugin.class).get(customizedPluginId);
        earnedBadges : bcpState.getEarnedBadges();
        !earnedBadges.contains(badge);*/
    then
        //earnedBadges.add(badge);
        action.setPlayer(myplayer);
end
end template