/*
 * Gamification Engine API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.smartcommunitylab.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import org.threeten.bp.OffsetDateTime;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModelProperty;

/**
 * GroupChallengeDTO
 */

public class GroupChallengeDTO {
  @SerializedName("attendees")
  private List<AttendeeDTO> attendees = null;

  @SerializedName("challengeModelName")
  private String challengeModelName = null;

  @SerializedName("challengePointConcept")
  private PointConceptDTO challengePointConcept = null;

  @SerializedName("challengeTarget")
  private Double challengeTarget = null;

  @SerializedName("end")
  private OffsetDateTime end = null;

  @SerializedName("gameId")
  private String gameId = null;

  @SerializedName("instanceName")
  private String instanceName = null;

  @SerializedName("origin")
  private String origin = null;

  @SerializedName("priority")
  private Integer priority = null;

  @SerializedName("reward")
  private RewardDTO reward = null;

  @SerializedName("start")
  private OffsetDateTime start = null;

  @SerializedName("state")
  private String state = null;

  public GroupChallengeDTO attendees(List<AttendeeDTO> attendees) {
    this.attendees = attendees;
    return this;
  }

  public GroupChallengeDTO addAttendeesItem(AttendeeDTO attendeesItem) {
    if (this.attendees == null) {
      this.attendees = new ArrayList<AttendeeDTO>();
    }
    this.attendees.add(attendeesItem);
    return this;
  }

   /**
   * Get attendees
   * @return attendees
  **/
  @ApiModelProperty(value = "")
  public List<AttendeeDTO> getAttendees() {
    return attendees;
  }

  public void setAttendees(List<AttendeeDTO> attendees) {
    this.attendees = attendees;
  }

  public GroupChallengeDTO challengeModelName(String challengeModelName) {
    this.challengeModelName = challengeModelName;
    return this;
  }

   /**
   * Get challengeModelName
   * @return challengeModelName
  **/
  @ApiModelProperty(value = "")
  public String getChallengeModelName() {
    return challengeModelName;
  }

  public void setChallengeModelName(String challengeModelName) {
    this.challengeModelName = challengeModelName;
  }

  public GroupChallengeDTO challengePointConcept(PointConceptDTO challengePointConcept) {
    this.challengePointConcept = challengePointConcept;
    return this;
  }

   /**
   * Get challengePointConcept
   * @return challengePointConcept
  **/
  @ApiModelProperty(value = "")
  public PointConceptDTO getChallengePointConcept() {
    return challengePointConcept;
  }

  public void setChallengePointConcept(PointConceptDTO challengePointConcept) {
    this.challengePointConcept = challengePointConcept;
  }

  public GroupChallengeDTO challengeTarget(Double challengeTarget) {
    this.challengeTarget = challengeTarget;
    return this;
  }

   /**
   * Get challengeTarget
   * @return challengeTarget
  **/
  @ApiModelProperty(value = "")
  public Double getChallengeTarget() {
    return challengeTarget;
  }

  public void setChallengeTarget(Double challengeTarget) {
    this.challengeTarget = challengeTarget;
  }

  public GroupChallengeDTO end(OffsetDateTime end) {
    this.end = end;
    return this;
  }

   /**
   * Get end
   * @return end
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getEnd() {
    return end;
  }

  public void setEnd(OffsetDateTime end) {
    this.end = end;
  }

  public GroupChallengeDTO gameId(String gameId) {
    this.gameId = gameId;
    return this;
  }

   /**
   * Get gameId
   * @return gameId
  **/
  @ApiModelProperty(value = "")
  public String getGameId() {
    return gameId;
  }

  public void setGameId(String gameId) {
    this.gameId = gameId;
  }

  public GroupChallengeDTO instanceName(String instanceName) {
    this.instanceName = instanceName;
    return this;
  }

   /**
   * Get instanceName
   * @return instanceName
  **/
  @ApiModelProperty(value = "")
  public String getInstanceName() {
    return instanceName;
  }

  public void setInstanceName(String instanceName) {
    this.instanceName = instanceName;
  }

  public GroupChallengeDTO origin(String origin) {
    this.origin = origin;
    return this;
  }

   /**
   * Get origin
   * @return origin
  **/
  @ApiModelProperty(value = "")
  public String getOrigin() {
    return origin;
  }

  public void setOrigin(String origin) {
    this.origin = origin;
  }

  public GroupChallengeDTO priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @ApiModelProperty(value = "")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public GroupChallengeDTO reward(RewardDTO reward) {
    this.reward = reward;
    return this;
  }

   /**
   * Get reward
   * @return reward
  **/
  @ApiModelProperty(value = "")
  public RewardDTO getReward() {
    return reward;
  }

  public void setReward(RewardDTO reward) {
    this.reward = reward;
  }

  public GroupChallengeDTO start(OffsetDateTime start) {
    this.start = start;
    return this;
  }

   /**
   * Get start
   * @return start
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getStart() {
    return start;
  }

  public void setStart(OffsetDateTime start) {
    this.start = start;
  }

  public GroupChallengeDTO state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(value = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupChallengeDTO groupChallengeDTO = (GroupChallengeDTO) o;
    return Objects.equals(this.attendees, groupChallengeDTO.attendees) &&
        Objects.equals(this.challengeModelName, groupChallengeDTO.challengeModelName) &&
        Objects.equals(this.challengePointConcept, groupChallengeDTO.challengePointConcept) &&
        Objects.equals(this.challengeTarget, groupChallengeDTO.challengeTarget) &&
        Objects.equals(this.end, groupChallengeDTO.end) &&
        Objects.equals(this.gameId, groupChallengeDTO.gameId) &&
        Objects.equals(this.instanceName, groupChallengeDTO.instanceName) &&
        Objects.equals(this.origin, groupChallengeDTO.origin) &&
        Objects.equals(this.priority, groupChallengeDTO.priority) &&
        Objects.equals(this.reward, groupChallengeDTO.reward) &&
        Objects.equals(this.start, groupChallengeDTO.start) &&
        Objects.equals(this.state, groupChallengeDTO.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attendees, challengeModelName, challengePointConcept, challengeTarget, end, gameId, instanceName, origin, priority, reward, start, state);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupChallengeDTO {\n");
    
    sb.append("    attendees: ").append(toIndentedString(attendees)).append("\n");
    sb.append("    challengeModelName: ").append(toIndentedString(challengeModelName)).append("\n");
    sb.append("    challengePointConcept: ").append(toIndentedString(challengePointConcept)).append("\n");
    sb.append("    challengeTarget: ").append(toIndentedString(challengeTarget)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    gameId: ").append(toIndentedString(gameId)).append("\n");
    sb.append("    instanceName: ").append(toIndentedString(instanceName)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    reward: ").append(toIndentedString(reward)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

