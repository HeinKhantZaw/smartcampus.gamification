/*
 * Gamification Engine API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.smartcommunitylab.api;

import java.util.List;
import java.util.Map;

import org.junit.Ignore;
import org.junit.Test;

import it.smartcommunitylab.ApiException;
import it.smartcommunitylab.model.CollectionNotification;
import it.smartcommunitylab.model.Notification;

/**
 * API tests for NotificationControllerApi
 */
@Ignore
public class NotificationControllerApiTest {

    private final NotificationControllerApi api = new NotificationControllerApi();

    
    /**
     * Get game notifications
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readNotificationUsingGET2Test() throws ApiException {
        String gameId = null;
        Long fromTs = null;
        Long toTs = null;
        List<String> includeTypes = null;
        List<String> excludeTypes = null;
        String page = null;
        String size = null;
        List<Notification> response = api.readNotificationUsingGET2(gameId, fromTs, toTs, includeTypes, excludeTypes, page, size);

        // TODO: test validations
    }
    
    /**
     * Get player notifications
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readPlayerNotificationGroupedUsingGETTest() throws ApiException {
        String gameId = null;
        String playerId = null;
        Long fromTs = null;
        Long toTs = null;
        List<String> includeTypes = null;
        List<String> excludeTypes = null;
        String page = null;
        String size = null;
        Map<String, CollectionNotification> response = api.readPlayerNotificationGroupedUsingGET(gameId, playerId, fromTs, toTs, includeTypes, excludeTypes, page, size);

        // TODO: test validations
    }
    
    /**
     * Get player notifications
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readPlayerNotificationUsingGETTest() throws ApiException {
        String gameId = null;
        String playerId = null;
        Long fromTs = null;
        Long toTs = null;
        List<String> includeTypes = null;
        List<String> excludeTypes = null;
        String page = null;
        String size = null;
        List<Notification> response = api.readPlayerNotificationUsingGET(gameId, playerId, fromTs, toTs, includeTypes, excludeTypes, page, size);

        // TODO: test validations
    }
    
    /**
     * Get team notifications
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readTeamNotificationUsingGETTest() throws ApiException {
        String gameId = null;
        String teamId = null;
        Long fromTs = null;
        Long toTs = null;
        List<String> includeTypes = null;
        List<String> excludeTypes = null;
        String page = null;
        String size = null;
        List<Notification> response = api.readTeamNotificationUsingGET(gameId, teamId, fromTs, toTs, includeTypes, excludeTypes, page, size);

        // TODO: test validations
    }
    
}
